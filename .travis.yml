language: rust
matrix:
  include:
    - os: linux
      env: TARGET=armv7-unknown-linux-gnueabihf
      rust: stable
      dist: trusty
    - os: linux
      env: TARGET=arm-linux-androideabi
      rust: stable
      dist: trusty
    - os: linux
      env: TARGET=x86_64-apple-darwin
      rust: stable
      dist: trusty
    - os: linux
      env: TARGET=i686-unknown-linux-gnu
      rust: stable
      dist: trusty
    - os: linux
      env: TARGET=i686-unknown-linux-musl
      rust: stable
      dist: trusty
    - os: linux
      env: TARGET=armv7-unknown-linux-gnueabihf
      rust: nightly
      dist: trusty
    - os: linux
      env: TARGET=arm-linux-androideabi
      rust: nightly
      dist: trusty
    - os: linux
      env: TARGET=x86_64-apple-darwin
      rust: nightly
      dist: trusty
    - os: linux
      env: TARGET=i686-unknown-linux-gnu
      rust: nightly
      dist: trusty
    - os: linux
      env: TARGET=i686-unknown-linux-musl
      rust: nightly
      dist: trusty
    - os: osx
      rust: stable
    - os: osx
      rust: nightly
script:
  - rustc --version
  - sysctl -a | grep mem
  - if [ "$TRAVIS_RUST_VERSION" == "nightly" ]; then
    rustup component add clippy-preview && cargo clippy;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    cargo build --features debug;
    fi
  - RUST_BACKTRACE=1 cargo build
  - if [ "$TRAVIS_RUST_VERSION" == "nightly" ]; then
    RUST_BACKTRACE=1 cargo bench;
    fi
  - RUST_BACKTRACE=1 cargo test
  - cd examples
  - RUST_BACKTRACE=1 cargo build
  - if [ "$TRAVIS_RUST_VERSION" == "nightly" ]; then
    cargo clippy;
    fi
  - cd ..
  - make
  - LD_LIBRARY_PATH=./target/debug ./simple
